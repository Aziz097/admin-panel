// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String    @id @default(uuid())
  username  String
  email     String    @unique
  password  String
  image     String?
  accounts  Account[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Account {
  id                String   @id @default(uuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model attb {
  id        Int       @id @default(autoincrement())
  tahun     String
  semester  String
  target    Int
  realisasi Int?

  @@unique([tahun, semester])
}

model ao {
  id        Int       @id @default(autoincrement())
  tahun     String
  semester  String
  target    Int
  realisasi Int?

  @@unique([tahun, semester])
}

model aki {
  id        Int       @id @default(autoincrement())
  tahun     String
  bulan     String
  target    Int
  realisasi Int?
  
  @@unique([tahun, bulan])
}

model optimasi {
  id         Int      @id @default(autoincrement())
  tahun      String
  bulan      String
  kategori   String
  penetapan  Int
  optimasi   Int?
  realisasi  Int?

  @@unique([tahun, bulan])
}
