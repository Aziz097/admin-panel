// prisma/schema.prisma

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Division {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  kpiData     KpiData[]
}

model MetricDefinition {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String?
  unit        String    // ex: "%", "buah", "Rp"
  dataType    String    // ex: "number", "percentage"
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  kpiData     KpiData[]
}

model UploadedFile {
  id           Int       @id @default(autoincrement())
  originalName String
  storageKey   String    // path di Supabase Storage
  month        Int       // 1–12
  year         Int       // ex: 2025
  uploadedBy   String    // username admin
  uploadedAt   DateTime  @default(now())

  kpiData      KpiData[]
}

model KpiData {
  id                 Int               @id @default(autoincrement())
  divisionId         Int
  metricDefinitionId Int
  uploadedFileId     Int
  periodMonth        Int               // 1–12
  periodYear         Int               // ex: 2025
  value              Float             // nilai KPI

  createdAt          DateTime          @default(now())
  updatedAt          DateTime          @updatedAt

  division          Division           @relation(fields: [divisionId], references: [id])
  metricDefinition  MetricDefinition   @relation(fields: [metricDefinitionId], references: [id])
  uploadedFile      UploadedFile       @relation(fields: [uploadedFileId], references: [id])

  @@unique([divisionId, metricDefinitionId, periodMonth, periodYear])
}

model AdminUser {
  id           Int      @id @default(autoincrement())
  supabaseUid  String   @unique
  username     String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}
